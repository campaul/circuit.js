var circuit=function(){var circuit={};var types={};circuit.define=function(name,data){types[name]=data};circuit.part=function(data){if(typeof data==="string"){data=circuit.parts[data]}return new Part(data)};var Part=function(data){var type=types[data.type];this.draw=function(canvas){type.draw(data,canvas)}};circuit.parts={};circuit.scale=50;return circuit}();circuit.define("dip",{draw:function(data,canvas){var context=canvas.getContext("2d");context.translate(.5,.5);var width=Math.floor(circuit.scale*3);var height=Math.floor(circuit.scale*(data.pins.length/2+1));var x=Math.floor(canvas.width/2-width/2);var y=Math.floor(canvas.height/2-height/2);context.strokeRect(x,y,width,height);context.beginPath();context.arc(x+width/2,y,circuit.scale/2,0,Math.PI,false);context.closePath();context.stroke();var fontSize=Math.floor(circuit.scale/3);context.font=fontSize+"px Monospace";for(var i=0;i<data.pins.length/2;i++){var pinY=Math.round(y+i*circuit.scale+circuit.scale*.7);var pinLeftX=x-Math.round(circuit.scale/2);var pinRightX=x+width;var pinWidth=Math.round(circuit.scale/2);var pinHeight=Math.round(circuit.scale/1.75);var textMargin=Math.round(circuit.scale/4);var textY=pinY+pinHeight/2+circuit.scale/9;var textLeftX=pinLeftX-textMargin-context.measureText(data.pins[i]).width;var textRightX=pinRightX+textMargin+pinWidth;context.strokeRect(pinLeftX,pinY,pinWidth,pinHeight);context.fillText(data.pins[i],textLeftX,textY);context.strokeRect(pinRightX,pinY,pinWidth,pinHeight);context.fillText(data.pins[data.pins.length-1-i],textRightX,textY)}var titleX=canvas.width/2-context.measureText(data.title).width/2;var titleY=fontSize*2;context.fillText(data.title,titleX,titleY)}});circuit.parts.LM339={title:"LM339",type:"dip",pins:["OUTPUT2","OUTPUT1","V+","INPUT1-","INPUT1+","INPUT2-","INPUT2+","INPUT3-","INPUT3+","INPUT4-","INPUT4+","GND","OUTPUT4","OUTPUT3"]};